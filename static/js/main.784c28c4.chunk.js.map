{"version":3,"sources":["components/NavBar.jsx","components/SortingVisualizer/SortingAlgorithms/BubbleSort.jsx","components/SortingVisualizer/SortingAlgorithms/HeapSort.jsx","components/SortingVisualizer/SortingAlgorithms/MergeSort.jsx","components/SortingVisualizer/SortingAlgorithms/QuickSort.jsx","components/SortingVisualizer/SortingManager.jsx","components/AStar/NodeGraph.jsx","components/AStar/AStar.jsx","components/AStar/PathFinding.jsx","components/MovieAPI/MovieComponents/SearchArea.jsx","components/MovieAPI/MovieComponents/Movie.jsx","components/MovieAPI/MovieComponents/MovieList.jsx","components/MovieAPI/MovieComponents/MovieInfo.jsx","components/MovieAPI/MovieComponents/Pagination.jsx","components/MovieAPI/MovieHome.jsx","components/Home/HomeData.jsx","components/Unity/SlideFunctions.jsx","components/Unity/VideoTemplate.jsx","components/Unity/UnityManager.jsx","Pictures/cs-town-planning.png","Pictures/UQ Res.png","Pictures/pasta-poetry.png","Pictures/gas-guyz.png","Pictures/chriss-moss.png","Pictures/twitter pic.png","Pictures/Apple Clone.png","components/WebPortfolio/CreateProject.jsx","components/WebPortfolio/WebPortfolio.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Menu","attached","tabular","Item","as","NavLink","exact","to","name","style","right","position","BubbleSort","array","arr","slice","animations","n","length","i","j","temp","push","HeapSort","Math","floor","heapify","HeapSortStart","largest","l","r","swap","MergeSort","mainArray","mergeMethod","startIndex","halfPoint","arr1","arr2","middleIndex","result","holder","k","merge","QuickSort","quickSort","items","leftIndex","rightIndex","left","index","pivot","partition","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","SECONDARY_COLOR","myArray","sorted","SortingManager","props","maxBars","state","speed","size","window","innerWidth","noResetBars","highestTimeoutId","setTimeout","clearTimeout","min","max","newArray","this","setState","random","enableSlider","SetGreen","ourSort","animationHolder","timerEnd","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","barOneHeight","height","barTwoHeight","parseInt","backgroundColor","FinishAnimation","disableSlider","AlreadySortedAnimation","barThreeIdx","strings","toString","previosPivot","barThreeStyle","indexA","barsLength","speedBarStyle","pointerEvents","event","target","value","resetArray","title","className","paddingTop","color","marginTop","map","idx","type","onChange","handleChange","bind","handleChangeSize","onClick","SortingAlgorithmsMerge","SortingAlgorithms","Component","NodeGraph","_walkNode","_gridX","_gridY","_parent","hCost","gCost","_seeker","_target","AStar","_Nodes","_Width","_Height","_Seeker","_Target","_FillSquare","nodeA","nodeB","dstX","abs","dstY","nodeItem","neighbours","x","y","checkX","checkY","correctNode","myCanvas","Seeker","Target","_myCanvas","startNode","targetNode","openSet","closedSet","foundPath","currentNode","fCost","indexOf","splice","neighbour","getNeighbours","includes","RetracePath","distance","GetDistance","newMovementCostToNeighbour","endNode","path","undefined","path2","reverse","seeker","Nodes","AStarHolder","mouseDown","clickFunction","heightFromTop","boardWidth","boardHeight","PathFinding","RunAStar","clearBoard","FindPath","mouseUp","clickBrushFunction","nativeEvent","which","getHeight","clientX","clientY","blockSize","gridArrayWidth","width","gridArrayHeight","getX1","gridX","gridY","nodeLocation","coorUpdate","coordinate","WallMode","seekerBrush","targetBrush","refs","canvas","DrawGrid","canvasID","canvasContext","getContext","totalLoop","beginPath","rect","strokeStyle","lineWidth","stroke","FillSquare","passMethod","distanceToTop","getElementById","getBoundingClientRect","top","clearAll","ctx","clearRect","number","clearMode","clearGridSquare","fillStyle","fillRect","ReDrawGrid","minHeight","id","ref","onMouseDown","onMouseMove","e","clickMe","onMouseUp","maxWidth","handleChangeHeight","SetDrawMode","SearchArea","padding","fontSize","action","onSubmit","handleSubmit","placeholder","Movie","image","src","alt","cursor","border","viewMovieInfo","movieId","MoveList","marginRight","marginLeft","margin","movies","movie","poster_path","MovieInfo","closeMovieInfo","currentMovie","release_date","substring","split","concat","join","overview","Pagination","pageLinks","active","currentPage","nextPage","pages","paddingBottom","MovieHome","preventDefault","searchTerm","fetch","apiKey","then","data","json","results","totalResults","total_results","array1","pageNumber","filteredMovie","filter","newCurrentMovie","process","numberPages","MovieList","HomeData","marginBottom","enablePosts","video","querySelector","pause","currentTime","cards","matchMedia","matches","display","VideoTemplate","class","title1","href","link1","autoplay","muted","loop","playsinline","controls","src1","UnityManager","insertAdjacentElement","rightButton","leftButton","rightB","leftB","CreateProject","titleInfo","urlInfo","roleInfo","extraInfo","projectImage","Welcome","useEffect","useState","uq","tp","ap","cs","gg","pp","cm","divStyle","Home","handleEntailmentRequest","location","assign","handleEntailmentRequestTwitter","basename","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.784c28c4.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n//import React, { useState, useEffect } from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\n//import React, { Input, Segement } from \"semantic-ui-react\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <nav>\r\n      <Menu attached=\"top\" tabular>\r\n        <Menu.Item as={NavLink} exact to=\"/\" name=\"Home\" />\r\n        <Menu.Item\r\n          as={NavLink}\r\n          exact\r\n          to=\"/sortingvisualizer\"\r\n          name=\"Sorting Visualizer\"\r\n        />\r\n        <Menu.Item as={NavLink} exact to=\"/pathfinding\" name=\"Pathfinding\" />\r\n        <Menu.Item\r\n          as={NavLink}\r\n          exact\r\n          to=\"/moviesearchapi\"\r\n          name=\"Movie Search API\"\r\n        />\r\n        <Menu.Item as={NavLink} exact to=\"/Unity\" name=\"Unity Projects\" />\r\n        <Menu.Item as={NavLink} exact to=\"/WebPortfolio\" name=\"Web Portfolio\" />\r\n        <Menu.Item\r\n          as={NavLink}\r\n          exact\r\n          to=\"/GitHub\"\r\n          name=\"Github\"\r\n          style={{\r\n            right: \"0\",\r\n            position: \"absolute\",\r\n          }}\r\n        />\r\n      </Menu>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n/*    <div class=\"ui tabular menu\">\r\n        <a class=\"item active\">Sorting Algorithms</a>\r\n        <a class=\"item\">Photos</a>\r\n      </div>*/\r\n\r\n/*\r\n\r\n     <div class=\"ui menu\">\r\n     <a class=\"item\">Browse</a>\r\n     <a class=\"item\">Submit</a>\r\n     <div class=\"right menu\">\r\n       <a class=\"item\">Sign Up</a>\r\n       <a class=\"item\">Help</a>\r\n     </div>\r\n   </div>\r\n   */\r\n\r\n/*export const NavBar = (props) => {\r\n  return (\r\n    <nav>\r\n      <Menu attached=\"top\" tabular>\r\n        <Link to=\"/\">\r\n          <Menu.Item\r\n            name=\"Home\"\r\n            active={\r\n              props.activeItem1 === \"Home\" || props.activeItem1 === \"home\"\r\n            }\r\n            onClick={props.handleItemClickNormalPass}\r\n          />\r\n        </Link>\r\n        <Link to=\"/sortingvisualizer\">\r\n          {console.log(props.activeItem1)}\r\n          <Menu.Item\r\n            name=\"Sorting Visualizer\"\r\n            active={\r\n              props.activeItem1 === \"SortingVisualizer\" ||\r\n              props.activeItem1 === \"sortingvisualizer\"\r\n            }\r\n            onClick={props.handleItemClickPass}\r\n          />\r\n        </Link>\r\n        <Link to=\"/pathfinding\">\r\n          {console.log(props.activeItem1)}\r\n          <Menu.Item\r\n            name=\"Pathfinding\"\r\n            active={\r\n              props.activeItem1 === \"Pathfinding\" ||\r\n              props.activeItem1 === \"pathfinding\"\r\n            }\r\n            onClick={props.handleItemClickNormalPass}\r\n          />\r\n        </Link>\r\n        <Link to=\"/moviesearchapi\">\r\n          {console.log(props.activeItem1)}\r\n          <Menu.Item\r\n            name=\"Movie Search API\"\r\n            active={\r\n              props.activeItem1 === \"moviesearchapi\" ||\r\n              props.activeItem1 === \"MovieSearchAPI\"\r\n            }\r\n            onClick={props.handleItemClickPass}\r\n          />\r\n        </Link>\r\n        <Link\r\n          to=\"GitHub\"\r\n          style={{\r\n            right: \"0\",\r\n            position: \"absolute\",\r\n          }}\r\n        >\r\n          <Menu.Item\r\n            name=\"GitHub\"\r\n            active={\r\n              props.activeItem1 === \"GitHub\" || props.activeItem1 === \"Github\"\r\n            }\r\n            onClick={props.handleItemClickNormalPass}\r\n          />\r\n        </Link>\r\n      </Menu>\r\n    </nav>\r\n  );\r\n};\r\n*/\r\n","export function BubbleSort(array) {\r\n  const arr = array.slice();\r\n  const animations = [];\r\n  let n = arr.length;\r\n\r\n  for (let i = 0; i < n - 1; i++) {\r\n    for (let j = 0; j < n - i - 1; j++) {\r\n      if (arr[j] > arr[j + 1]) {\r\n        // swap temp and arr[i]\r\n\r\n        let temp = arr[j];\r\n        arr[j] = arr[j + 1];\r\n        arr[j + 1] = temp;\r\n\r\n        animations.push(j, j + 1); //swaps\r\n      } else {\r\n        animations.push(j, j + 1); // comparions\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  for (let i = 0; i < n; i++) {\r\n    console.log(arr[i]);\r\n  }*/\r\n\r\n  return [animations, arr];\r\n}\r\n","export function HeapSort(array) {\r\n  const arr = array.slice();\r\n  const animations = [];\r\n  //let n = arr.length;\r\n\r\n  // Build heap (rearrange array) // make root largest\r\n\r\n  HeapSortStart(arr, animations);\r\n  /*\r\n  for (let i = 0; i < n; i++) {\r\n    console.log(arr[i]);\r\n  }\r\n*/\r\n  return [animations, arr];\r\n}\r\n\r\nfunction HeapSortStart(arr, animations) {\r\n  let n = arr.length;\r\n  for (let i = Math.floor(n / 2 - 1); i >= 0; i--) {\r\n    heapify(arr, n, i, animations);\r\n  }\r\n\r\n  // One by one extract an element from heap\r\n  for (let i = n - 1; i > 0; i--) {\r\n    // Move current root to end\r\n    let temp = arr[0];\r\n    arr[0] = arr[i]; // move our last leaf -i to the start\r\n    arr[i] = temp; // move our root to the end (we had a temp of it above)\r\n    animations.push(0, i);\r\n    // call max heapify on the reduced heap\r\n    heapify(arr, i, 0, animations); // keep shifting through\r\n  }\r\n  return arr;\r\n}\r\n\r\n// To heapify a subtree rooted with node i which is\r\n// an index in arr[]. n is size of heap\r\nfunction heapify(arr, n, i, animations) {\r\n  let largest = i; // Initialize largest as root\r\n  let l = 2 * i + 1; // left = 2*i + 1\r\n  let r = 2 * i + 2; // right = 2*i + 2\r\n\r\n  //animations.push(l, r);\r\n\r\n  // If left child is larger than root\r\n  if (l < n && arr[l] > arr[largest]) {\r\n    //animations.push(l, n);\r\n    //animations.push(largest, l);\r\n    //animations.push(l, largest);\r\n    largest = l;\r\n  } else {\r\n    //animations.push(l, n);\r\n    //animations.push(l, largest);\r\n  }\r\n\r\n  // If right child is larger than largest so far\r\n\r\n  if (r < n && arr[r] > arr[largest]) {\r\n    //animations.push(r, n);\r\n    //animations.push(largest, r);\r\n    largest = r;\r\n    //animations.push(r, n);\r\n    //animations.push(largest, r);\r\n  } else {\r\n    //animations.push(r, largest);\r\n  }\r\n\r\n  // If largest is not root\r\n  if (largest !== i) {\r\n    let swap = arr[i];\r\n    arr[i] = arr[largest];\r\n    arr[largest] = swap;\r\n    animations.push(largest, i);\r\n\r\n    // Recursively heapify the affected sub-tree\r\n    heapify(arr, n, largest, animations);\r\n  }\r\n}\r\n","export function MergeSort(array) {\r\n  // array = [45, 233, 22, 11, 5, 73, 42, 99, 45, 233, 22, 11, 5, 73, 42, 99];\r\n  const arr = array.slice();\r\n\r\n  const animations = [];\r\n\r\n  //let p = mergeSort(array, animations);\r\n  if (array.length <= 1) {\r\n    return array;\r\n  }\r\n\r\n  let mainArray = array;\r\n\r\n  array = mergeMethod(arr, animations, 0, array.length - 1, mainArray);\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    //console.log(array[i]);\r\n  }\r\n  return [animations, array];\r\n}\r\n\r\nfunction mergeMethod(array, animations, startIndex, halfPoint, mainArray) {\r\n  // recursion base case\r\n  // it checks if the array length is less than or equal to 1.\r\n  // if that's the case return the arr else keep splicing.\r\n\r\n  if (array.length <= 1) return array;\r\n  // remember that we said merge sort uses divide and conquer\r\n  // algorithm pattern\r\n\r\n  // it firsts know the half point of the array.\r\n  halfPoint = Math.floor(array.length / 2);\r\n\r\n  // but for the fact that merge sort needs the array to be of one element, it will keep splicing that half till it fulfills the condition of having one element array.\r\n\r\n  let arrayFirstHalf = array.slice(0, halfPoint);\r\n\r\n  let firstHalf = mergeMethod(\r\n    arrayFirstHalf,\r\n    animations,\r\n    startIndex,\r\n    halfPoint + startIndex,\r\n    mainArray\r\n  );\r\n\r\n  let arraySecondHalf = array.slice(halfPoint, array.length);\r\n  // second array from the half point up to the end of the array.\r\n\r\n  //halfPoint = startIndex;\r\n  let secondHalf = mergeMethod(\r\n    arraySecondHalf,\r\n    animations,\r\n    halfPoint + startIndex, // this is where the error occurs we get 2 instead of 6 duede to 8/2 = 4 4/2 = 2 we need 6\r\n    startIndex + array.length,\r\n    mainArray\r\n  );\r\n\r\n  // merge the array back and return the result.\r\n  // note that we are using the helper function we created above.\r\n\r\n  return merge(\r\n    firstHalf,\r\n    secondHalf,\r\n    animations,\r\n    startIndex,\r\n    halfPoint,\r\n    mainArray\r\n  );\r\n}\r\n\r\nfunction merge(arr1, arr2, animations, startIndex, middleIndex, mainArray) {\r\n  let result = []; // the array to hold results.\r\n  let i = 0;\r\n  let j = 0;\r\n  let holder = [];\r\n  while (i < arr1.length && j < arr2.length) {\r\n    // compare the elements one at a time.\r\n    if (arr1[i] > arr2[j]) {\r\n      result.push(arr2[j]);\r\n      holder.push(j + middleIndex + startIndex);\r\n      j++;\r\n    } else {\r\n      result.push(arr1[i]);\r\n      holder.push(i + startIndex);\r\n      i++;\r\n    }\r\n  }\r\n\r\n  // these other while loops checks if there's some item left\r\n  // in the arrays so that we can push their elements in the result array.\r\n  while (i < arr1.length) {\r\n    result.push(arr1[i]);\r\n    holder.push(i + startIndex);\r\n    i++;\r\n  }\r\n\r\n  while (j < arr2.length) {\r\n    result.push(arr2[j]);\r\n    holder.push(j + middleIndex + startIndex);\r\n    j++;\r\n  }\r\n\r\n  for (let k = 0; k < result.length; k++) {\r\n    if (result[k] !== mainArray[startIndex + k]) {\r\n      animations.push(k + startIndex, holder[k], result[k]);\r\n      mainArray[startIndex + k] = result[k];\r\n    }\r\n  }\r\n\r\n  // mainArray[K+ startIndex] = result[k]\r\n\r\n  return result;\r\n}\r\n","export function QuickSort(array) {\r\n  const arr = array.slice();\r\n\r\n  const animations = [];\r\n  let n = arr.length;\r\n\r\n  if (n <= 1) {\r\n    return array;\r\n  }\r\n\r\n  array = quickSort(array, 0, array.length - 1, animations);\r\n  //console.log(array);\r\n  return [animations, array];\r\n}\r\n\r\nfunction swap(items, leftIndex, rightIndex, animations) {\r\n  animations.push(leftIndex, rightIndex);\r\n\r\n  var temp = items[leftIndex];\r\n  items[leftIndex] = items[rightIndex];\r\n  items[rightIndex] = temp;\r\n}\r\nfunction partition(items, left, right, animations) {\r\n  var pivot = items[Math.floor((right + left) / 2)], //middle element\r\n    i = left, //left pointer\r\n    j = right; //right pointer\r\n\r\n  //let pivotA = Math.floor((right + left) / 2);\r\n  while (i <= j) {\r\n    while (items[i] < pivot) {\r\n      i++;\r\n    }\r\n    while (items[j] > pivot) {\r\n      j--;\r\n    }\r\n    if (i <= j) {\r\n      swap(items, i, j, animations); //sawpping two elements\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\n\r\nfunction quickSort(items, left, right, animations) {\r\n  var index;\r\n  if (items.length > 1) {\r\n    index = partition(items, left, right, animations); //index returned from partition\r\n    if (left < index - 1) {\r\n      //more elements on the left side of the pivot\r\n      quickSort(items, left, index - 1, animations);\r\n    }\r\n    if (index < right) {\r\n      //more elements on the right side of the pivot\r\n      quickSort(items, index, right, animations);\r\n    }\r\n  }\r\n  return items;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BubbleSort } from \"./SortingAlgorithms/BubbleSort.jsx\";\r\nimport { HeapSort } from \"./SortingAlgorithms/HeapSort.jsx\";\r\nimport { MergeSort } from \"./SortingAlgorithms/MergeSort.jsx\";\r\n//import { MergeSort2 } from \"./SortingAlgorithms/MergeSort2.jsx\";\r\nimport { QuickSort } from \"./SortingAlgorithms/QuickSort.jsx\";\r\n\r\n/*\r\nimport \"../.././Style/SortingVisualizer.css\"; // my css\r\nimport \"../.././Style/Tile.css\";\r\nimport \"../.././Style/home.css\";\r\n*/\r\n\r\n// higher = slower\r\nlet ANIMATION_SPEED_MS = 4;\r\n\r\n// Change this value for the number of bars (value) in the array.\r\nlet NUMBER_OF_ARRAY_BARS = 16;\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = \"#2185d0\"; //\"rgba(66, 134, 244, 0.8)\";\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = \"red\";\r\n\r\nlet myArray = [];\r\n\r\nlet sorted = false;\r\n\r\nclass SortingManager extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    NUMBER_OF_ARRAY_BARS = this.maxBars(); //\r\n\r\n    this.state = {\r\n      array: myArray,\r\n      speed: ANIMATION_SPEED_MS,\r\n      size: NUMBER_OF_ARRAY_BARS,\r\n    };\r\n\r\n    sorted = false;\r\n  }\r\n\r\n  maxBars() {\r\n    return (window.innerWidth - 60) / 10;\r\n  }\r\n\r\n  resetArray(noResetBars) {\r\n    let highestTimeoutId = window.setTimeout(function () {}, 0);\r\n    //let highestTimeoutId = setTimeout(\";\");\r\n    for (var i = 0; i < highestTimeoutId; i++) {\r\n      clearTimeout(i);\r\n    }\r\n    let newArray = [];\r\n    //NUMBER_OF_ARRAY_BARS = 16; // remove\r\n    // optional arugment to reset bars in accourdance ot screensize\r\n    if (noResetBars !== true) {\r\n      NUMBER_OF_ARRAY_BARS = this.maxBars();\r\n      // NUMBER_OF_ARRAY_BARS = 16; // remove\r\n      this.setState({ size: NUMBER_OF_ARRAY_BARS });\r\n    }\r\n\r\n    // reset the array\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      newArray.push(randomIntFromInterval(5, 610)); // 30\r\n    }\r\n\r\n    // newArray = [45, 233, 22, 11, 5, 73, 42, 99, 45, 233, 22, 11, 5, 73, 42, 99];\r\n    // enable the speedslider\r\n    this.enableSlider();\r\n\r\n    // set the sorted value\r\n    sorted = false;\r\n\r\n    // make the bars the right colour\r\n    this.SetGreen();\r\n\r\n    // update the array values\r\n    this.setState({ array: newArray });\r\n  }\r\n\r\n  SortingAlgorithms(ourSort) {\r\n    // if our arrayed is already sorted/sorting do this\r\n    if (sorted === true) {\r\n      this.AlreadySortedAnimation();\r\n      return;\r\n    }\r\n    //array = this.state.array;\r\n    // make an array thats equal to the ret urn value of the sort. this also holds the values for our animation swaps\r\n    const animationHolder = ourSort(this.state.array);\r\n\r\n    let timerEnd = animationHolder[0].length;\r\n\r\n    // get all of or bar values\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n    // go through all our animations\r\n    for (let i = 0; i < animationHolder[0].length; i++) {\r\n      const barOneIdx = animationHolder[0][i]; // first value\r\n      const barTwoIdx = animationHolder[0][i + 1]; // second value\r\n\r\n      // get styles if arraybars[index] is undefined get null\r\n      const barOneStyle = arrayBars[barOneIdx]\r\n        ? arrayBars[barOneIdx].style\r\n        : {};\r\n\r\n      const barTwoStyle = arrayBars[barTwoIdx]\r\n        ? arrayBars[barTwoIdx].style\r\n        : {};\r\n\r\n      // first timer event\r\n      setTimeout(() => {\r\n        let barOneHeight = barOneStyle.height;\r\n        let barTwoHeight = barTwoStyle.height;\r\n\r\n        let convertPixelToIntOne = parseInt(barOneHeight, 10);\r\n\r\n        let convertPixelToIntTwo = parseInt(barTwoHeight, 10);\r\n\r\n        // if our first bar is > than our second bar swap the two elements\r\n        if (convertPixelToIntOne > convertPixelToIntTwo) {\r\n          // swap values\r\n          let temp = barOneStyle.height;\r\n          barOneStyle.height = barTwoStyle.height;\r\n          barTwoStyle.height = temp;\r\n        }\r\n\r\n        // change the colour to red\r\n        barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n        barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n\r\n        // end timeouts event (changing the bars back to the original colour once swapped)\r\n        setTimeout(() => {\r\n          // change colour back\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n          // once this coumter = 0 we have finished the animation and can do the next steps. we take 2 off the value coz we swap 2 elements\r\n          timerEnd = timerEnd - 2;\r\n          if (timerEnd === 0) {\r\n            // not 100% sure why i have to do this. but its important\r\n            this.setState({ array: animationHolder[1] });\r\n            // enable the slider\r\n            this.enableSlider();\r\n            // play the finish animation method\r\n            this.FinishAnimation();\r\n          }\r\n        }, ANIMATION_SPEED_MS); // second argument for settimeout = the timeout time\r\n      }, i * ANIMATION_SPEED_MS); // linear increasing timeout time based off I from the for loop\r\n\r\n      i = i + 1; // we swapped two elements so we plus 2;\r\n    }\r\n\r\n    // this finishes before the first timeout starts, we already want 1 sort happening so set sorted == true\r\n    sorted = true;\r\n\r\n    // dont want the speed slider moving during the sorting\r\n    this.disableSlider();\r\n  }\r\n\r\n  SortingAlgorithmsMerge(ourSort) {\r\n    // if our arrayed is already sorted/sorting do this\r\n    if (sorted === true) {\r\n      this.AlreadySortedAnimation();\r\n      return;\r\n    }\r\n\r\n    // make an array thats equal to the ret urn value of the sort. this also holds the values for our animation swaps\r\n    const animationHolder = ourSort(this.state.array);\r\n\r\n    let timerEnd = animationHolder[0].length;\r\n\r\n    // get all of or bar values\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n    // go through all our animations\r\n    for (let i = 0; i < animationHolder[0].length; i++) {\r\n      const barOneIdx = animationHolder[0][i]; // first value\r\n      const barTwoIdx = animationHolder[0][i + 1]; // second value\r\n      const barThreeIdx = animationHolder[0][i + 2]; // second value\r\n\r\n      // get styles if arraybars[index] is undefined get null\r\n      const barOneStyle = arrayBars[barOneIdx]\r\n        ? arrayBars[barOneIdx].style\r\n        : {};\r\n\r\n      const barTwoStyle = arrayBars[barTwoIdx]\r\n        ? arrayBars[barTwoIdx].style\r\n        : {};\r\n\r\n      let strings = barThreeIdx.toString() + \"px\";\r\n\r\n      // first timer event\r\n      setTimeout(() => {\r\n        // take the bar\r\n        // put it at the start of the array we dont know what the start is unless we pass it through\r\n        // so we need to pass through startvalue and value1\r\n\r\n        barOneStyle.height = strings;\r\n        //barTwoStyle.height = temp;\r\n\r\n        // change the colour to red\r\n        barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n        barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n\r\n        // end timeouts event (changing the bars back to the original colour once swapped)\r\n        setTimeout(() => {\r\n          // change colour back\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n          // once this coumter = 0 we have finished the animation and can do the next steps. we take 2 off the value coz we swap 2 elements\r\n          timerEnd = timerEnd - 3;\r\n          if (timerEnd === 0) {\r\n            // not 100% sure why i have to do this. but its important\r\n            this.setState({ array: animationHolder[1] });\r\n            // enable the slider\r\n            this.enableSlider();\r\n            // play the finish animation method\r\n            this.FinishAnimation();\r\n          }\r\n        }, ANIMATION_SPEED_MS); // second argument for settimeout = the timeout time\r\n      }, i * ANIMATION_SPEED_MS); // linear increasing timeout time based off I from the for loop\r\n\r\n      i = i + 2; // we swapped two elements so we plus 2;\r\n    }\r\n\r\n    // this finishes before the first timeout starts, we already want 1 sort happening so set sorted == true\r\n    sorted = true;\r\n\r\n    // dont want the speed slider moving during the sorting\r\n    this.disableSlider();\r\n  }\r\n\r\n  SortingAlgorithmsQuick(ourSort) {\r\n    // if our arrayed is already sorted/sorting do this\r\n    if (sorted === true) {\r\n      this.AlreadySortedAnimation();\r\n      return;\r\n    }\r\n\r\n    // make an array thats equal to the ret urn value of the sort. this also holds the values for our animation swaps\r\n    const animationHolder = ourSort(this.state.array);\r\n\r\n    let timerEnd = animationHolder[0].length;\r\n\r\n    // get all of or bar values\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n    let previosPivot = 0;\r\n    // go through all our animations\r\n    for (let i = 0; i < animationHolder[0].length; i++) {\r\n      const barOneIdx = animationHolder[0][i]; // first value\r\n      const barTwoIdx = animationHolder[0][i + 1]; // second value\r\n      const barThreeIdx = animationHolder[0][i + 2]; // second value\r\n\r\n      // get styles if arraybars[index] is undefined get null\r\n      const barOneStyle = arrayBars[barOneIdx]\r\n        ? arrayBars[barOneIdx].style\r\n        : {};\r\n\r\n      const barTwoStyle = arrayBars[barTwoIdx]\r\n        ? arrayBars[barTwoIdx].style\r\n        : {};\r\n\r\n      const barThreeStyle = arrayBars[barThreeIdx]\r\n        ? arrayBars[barThreeIdx].style\r\n        : {};\r\n\r\n      // first timer event\r\n      setTimeout(() => {\r\n        let indexA = barThreeIdx;\r\n\r\n        let barOneHeight = barOneStyle.height;\r\n        let barTwoHeight = barTwoStyle.height;\r\n\r\n        let convertPixelToIntOne = parseInt(barOneHeight, 10);\r\n\r\n        let convertPixelToIntTwo = parseInt(barTwoHeight, 10);\r\n\r\n        // if our first bar is > than our second bar swap the two elements\r\n        if (convertPixelToIntOne > convertPixelToIntTwo) {\r\n          // swap values\r\n          let temp = barOneStyle.height;\r\n          barOneStyle.height = barTwoStyle.height;\r\n          barTwoStyle.height = temp;\r\n        }\r\n\r\n        // change the colour to red\r\n        if (barOneStyle === barThreeStyle) {\r\n        } else {\r\n          barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n        }\r\n\r\n        if (barTwoStyle === barThreeStyle) {\r\n        } else {\r\n          barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n        }\r\n\r\n        if (previosPivot !== indexA) {\r\n          let barThreeStyle2 = arrayBars[previosPivot].style;\r\n          //barThreeStyle2 = PRIMARY_COLOR;\r\n          previosPivot = indexA;\r\n          barThreeStyle.backgroundColor = \"#FFFFFF\";\r\n        }\r\n\r\n        // end timeouts event (changing the bars back to the original colour once swapped)\r\n        setTimeout(() => {\r\n          // change colour back\r\n\r\n          barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n          barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n\r\n          //if (barThreeStyle)\r\n\r\n          // once this coumter = 0 we have finished the animation and can do the next steps. we take 2 off the value coz we swap 2 elements\r\n          timerEnd = timerEnd - 3;\r\n          if (timerEnd === 0) {\r\n            // not 100% sure why i have to do this. but its important\r\n            this.setState({ array: animationHolder[1] });\r\n            // enable the slider\r\n            this.enableSlider();\r\n            // play the finish animation method\r\n            this.FinishAnimation();\r\n          }\r\n        }, ANIMATION_SPEED_MS); // second argument for settimeout = the timeout time\r\n      }, i * ANIMATION_SPEED_MS); // linear increasing timeout time based off I from the for loop\r\n\r\n      i = i + 2; // we swapped two elements so we plus 2;\r\n    }\r\n\r\n    // this finishes before the first timeout starts, we already want 1 sort happening so set sorted == true\r\n    sorted = true;\r\n\r\n    // dont want the speed slider moving during the sorting\r\n    this.disableSlider();\r\n  }\r\n\r\n  // make all bars red going upwards once we finish a sort. it looks cool\r\n  FinishAnimation() {\r\n    // get all bars, we could pass this in as argument from the previos sort method if we wanted\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    let barsLength = arrayBars.length;\r\n    // go through each bar\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      // first timer\r\n      setTimeout(() => {\r\n        //set the first bar = to the chosen colour\r\n        arrayBars[i].style.backgroundColor = SECONDARY_COLOR;\r\n        // lower the count\r\n        barsLength--;\r\n        // if we have no more bars that we need to colour make them all starting colour blue\r\n        if (barsLength === 0) {\r\n          // timer event\r\n          setTimeout(() => {\r\n            // go through each bar and make them blue\r\n            for (let i = 0; i < arrayBars.length; i++) {\r\n              arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\r\n            }\r\n          }, 250); //speed 2nd argument for timeout event\r\n        }\r\n      }, i * 10); // speed 2nd argument for timeout event. make it the delay increase via the loop value I\r\n    }\r\n  }\r\n\r\n  // re-enable the ability to click the speedbar and reset the styles\r\n  enableSlider() {\r\n    let speedBar = document.getElementsByClassName(\"speed\");\r\n    let speedBarStyle = speedBar[0].style;\r\n    speedBarStyle.pointerEvents = \"all\";\r\n    speedBarStyle.backgroundColor = \"#d3d3d3\";\r\n  }\r\n\r\n  // disable the speed slider during sorting animation\r\n  disableSlider() {\r\n    // get speed bar and disable the ability to click it via the pointerevents. this the easiest way to disable\r\n    let speedBar = document.getElementsByClassName(\"speed\");\r\n    let speedBarStyle = speedBar[0].style;\r\n    speedBarStyle.pointerEvents = \"none\";\r\n    speedBarStyle.backgroundColor = \"red\";\r\n  }\r\n\r\n  // if we've trying to sort already sorted data run this animation\r\n  AlreadySortedAnimation() {\r\n    // get bars\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n    // go through bars and change colour\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      arrayBars[i].style.backgroundColor = SECONDARY_COLOR;\r\n    }\r\n    setTimeout(() => {\r\n      for (let i = 0; i < arrayBars.length; i++) {\r\n        arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\r\n      }\r\n    }, 500); // change all bars colour to red then after half a second change all colours back to the original colour\r\n  }\r\n\r\n  // set all bars to the colour green\r\n  SetGreen() {\r\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n    for (let i = 0; i < arrayBars.length; i++) {\r\n      arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\r\n    }\r\n  }\r\n\r\n  // not 100% sure we these\r\n\r\n  handleChange(event) {\r\n    ANIMATION_SPEED_MS = event.target.value;\r\n    this.setState({ speed: ANIMATION_SPEED_MS });\r\n  }\r\n\r\n  handleChangeSize(event) {\r\n    NUMBER_OF_ARRAY_BARS = event.target.value;\r\n    this.setState({ size: NUMBER_OF_ARRAY_BARS });\r\n    this.resetArray(true);\r\n  }\r\n\r\n  // reset the array when we create this class\r\n  componentDidMount() {\r\n    document.title = \"Sorting Visualizer\";\r\n\r\n    this.resetArray(true);\r\n  }\r\n\r\n  setStateFunction() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1\r\n          className=\"ui header\"\r\n          style={{\r\n            paddingTop: \"24px\",\r\n            color: \"white\",\r\n            marginTop: \"1px\",\r\n          }}\r\n        >\r\n          Sorting Visualizer\r\n        </h1>\r\n        <div className=\"array-container\">\r\n          {this.state.array.map((value, idx) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={idx}\r\n              style={{\r\n                backgroundColor: PRIMARY_COLOR,\r\n                height: `${value}px`,\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n        <div className=\"ui nine column grid blackBC\">\r\n          <div className=\"column black\">\r\n            <h1>Speed</h1>\r\n            <input\r\n              className=\"speed\"\r\n              type=\"range\"\r\n              min=\"4\"\r\n              max=\"100\"\r\n              value={this.state.speed}\r\n              onChange={this.handleChange.bind(this)}\r\n            ></input>\r\n            <div className=\"twoEnds\">\r\n              <div>Fast</div> <div>Slow</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"column black\"></div>\r\n          <div className=\"column black\">\r\n            <h1>Size</h1>\r\n            <input\r\n              type=\"range\"\r\n              className=\"size\"\r\n              min=\"10\"\r\n              max={this.maxBars()}\r\n              value={this.state.size}\r\n              onChange={this.handleChangeSize.bind(this)}\r\n            ></input>\r\n            <div className=\"twoEnds\">\r\n              <div>Small</div> <div> Large</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"column black\"></div>\r\n          <div className=\"column black\">\r\n            <h1>Reset</h1>\r\n            <button\r\n              className=\"ui primary button\"\r\n              onClick={() => this.resetArray()}\r\n            >\r\n              Generate New Array\r\n            </button>\r\n          </div>\r\n          <div className=\"column black\">\r\n            <h3>Merge Sort</h3>\r\n            <button\r\n              className=\"ui button\"\r\n              onClick={() => this.SortingAlgorithmsMerge(MergeSort)} //this.mergeSort()}\r\n            >\r\n              <p>Merge Sort</p>\r\n            </button>\r\n          </div>\r\n          <div className=\"column black\">\r\n            <h3>Quick Sort</h3>\r\n            <button\r\n              className=\"ui button\"\r\n              onClick={() => this.SortingAlgorithms(QuickSort)} //}  //this.Promise()\r\n            >\r\n              <p>Quick Sort </p>\r\n            </button>\r\n          </div>\r\n          <div className=\"column black\">\r\n            <h3>Heap Sort</h3>\r\n            <button\r\n              className=\"ui button\"\r\n              onClick={() => this.SortingAlgorithms(HeapSort)}\r\n            >\r\n              <p>Heap Sort</p>\r\n            </button>\r\n          </div>\r\n          <div className=\"column black\">\r\n            <h3>Bubble Sort</h3>\r\n            <button\r\n              className=\"ui button\"\r\n              onClick={() => this.SortingAlgorithms(BubbleSort)}\r\n            >\r\n              <p>Bubble Sort</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingManager;\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","class NodeGraph {\r\n  constructor(_walkNode, _gridX, _gridY, _parent) {\r\n    // create varibles that we can call upon later\r\n    this._parent = _parent;\r\n    this._walkNode = _walkNode;\r\n    this._gridX = _gridX;\r\n    this._gridY = _gridY;\r\n\r\n    // we create these ones two with default values\r\n    this.hCost = 0;\r\n    this.gCost = 0;\r\n    this._seeker = false;\r\n    this._target = false;\r\n  }\r\n\r\n  // call this to get the fcost of this node\r\n  fCost() {\r\n    return this.gCost + this.hCost;\r\n  }\r\n}\r\n\r\nexport default NodeGraph;\r\n","class AStar {\r\n  constructor(_Nodes, _Width, _Height, _Seeker, _Target, _FillSquare) {\r\n    // set out class varibles up\r\n    this._Nodes = _Nodes;\r\n    this._Width = _Width;\r\n    this._Height = _Height;\r\n    this._Seeker = _Seeker;\r\n    this._Target = _Target;\r\n\r\n    // this is a method passed on from the pathfinding class\r\n    this._FillSquare = _FillSquare;\r\n  }\r\n\r\n  // distance of 2 nodes\r\n  GetDistance(nodeA, nodeB) {\r\n    let dstX = Math.abs(nodeA._gridX - nodeB._gridX); // abs = if negative remove the negative sign\r\n    let dstY = Math.abs(nodeA._gridY - nodeB._gridY);\r\n\r\n    if (dstX > dstY) {\r\n      return 14 * dstY + 10 * (dstX - dstY);\r\n    } else {\r\n      return 14 * dstX + 10 * (dstY - dstX);\r\n    }\r\n  }\r\n\r\n  // get neighbours\r\n  getNeighbours(nodeItem) {\r\n    let neighbours = [];\r\n\r\n    for (let x = -1; x <= 1; x++) {\r\n      for (let y = -1; y <= 1; y++) {\r\n        if (x === 0 && y === 0) {\r\n          continue;\r\n        }\r\n\r\n        //diagnoal movement stop\r\n        if (x === -1 && y === -1) {\r\n          continue;\r\n        }\r\n\r\n        if (x === 1 && y === 1) {\r\n          continue;\r\n        }\r\n\r\n        if (x === 1 && y === -1) {\r\n          continue;\r\n        }\r\n        if (x === -1 && y === 1) {\r\n          continue;\r\n        }\r\n\r\n        let checkX = nodeItem._gridX + x;\r\n        let checkY = nodeItem._gridY + y;\r\n\r\n        // 00 = node[0] 1 0 = node[1] 0 1 = node [30]\r\n\r\n        // 30 is the blocksize\r\n        if (\r\n          checkX >= 0 &&\r\n          checkX < this._Width / 30 &&\r\n          checkY >= 0 &&\r\n          checkY < this._Height / 30\r\n        ) {\r\n          let correctNode = (this._Width / 30) * checkY + checkX;\r\n\r\n          neighbours.push(this._Nodes[correctNode]); // array of nodes\r\n        }\r\n      }\r\n    } // end of for loop\r\n    return neighbours;\r\n  }\r\n\r\n  FindPath(myCanvas, Seeker, Target) {\r\n    this._myCanvas = myCanvas;\r\n    let startNode = this._Nodes[Seeker];\r\n    let targetNode = this._Nodes[Target];\r\n\r\n    let openSet = [];\r\n    let closedSet = [];\r\n    openSet.push(startNode);\r\n\r\n    let foundPath = false;\r\n\r\n    let j = -1;\r\n    while (openSet.length > 0) {\r\n      let currentNode = openSet[0];\r\n      // start at 1 to ignore the starting block\r\n      for (let i = 1; i < openSet.length; i++) {\r\n        if (\r\n          openSet[i].fCost() < currentNode.fCost() ||\r\n          (openSet[i].fCost() === currentNode.fCost() &&\r\n            openSet[i].hCost < currentNode.hCost)\r\n        ) {\r\n          // currentNode is the small fcost??\r\n          currentNode = openSet[i];\r\n        }\r\n      }\r\n\r\n      let index = openSet.indexOf(currentNode);\r\n      openSet.splice(index, 1); // remove node\r\n      closedSet.push(currentNode);\r\n\r\n      if (currentNode === targetNode) {\r\n        foundPath = true;\r\n        break;\r\n      }\r\n\r\n      let neighbour = this.getNeighbours(currentNode);\r\n      for (let i = 0; i < neighbour.length; i++) {\r\n        //grid.DrawTiles(neighbour.gridPosition, grid.blueTile);\r\n\r\n        if (\r\n          neighbour[i]._walkNode === false ||\r\n          closedSet.includes(neighbour[i])\r\n        ) {\r\n          continue; // go to next iteration this neighbour cant bse used due to it being an obstacle or already walked on (we dont want an endless loop of neighbours)\r\n        }\r\n\r\n        //animations\r\n        setTimeout(() => {\r\n          if (neighbour[i] !== targetNode) {\r\n            this._FillSquare(neighbour[i]._gridX, neighbour[i]._gridY, \"white\");\r\n          }\r\n\r\n          if (foundPath === true && neighbour[i] === targetNode) {\r\n            this.RetracePath(startNode, targetNode);\r\n          }\r\n        }, 15 * j); // second argument for settimeout = the timeout time\r\n        // end of animations\r\n\r\n        let distance = this.GetDistance(currentNode, neighbour[i]);\r\n\r\n        let newMovementCostToNeighbour = currentNode.gCost + distance;\r\n        // multiple ways to get to a nod if it isnt less it isnt optimal way to get to said node so we can skip. furthermore if this node has already been added to the openset dont add it again otherwise\r\n\r\n        if (\r\n          newMovementCostToNeighbour < neighbour[i].gCost ||\r\n          openSet.includes(neighbour[i]) === false\r\n        ) {\r\n          neighbour[i].gCost = newMovementCostToNeighbour;\r\n          neighbour[i].hCost = this.GetDistance(neighbour[i], targetNode);\r\n          neighbour[i]._parent = currentNode;\r\n          //neighbour = this.getNeighbours(currentNode);\r\n\r\n          if (openSet.includes(neighbour[i]) === false) {\r\n            j++;\r\n            openSet.push(neighbour[i]);\r\n          }\r\n        }\r\n      }\r\n    } // end of while\r\n  } // end of findpath\r\n\r\n  RetracePath(startNode, endNode) {\r\n    let path = [];\r\n    let currentNode = endNode; // can minus 1 if we want ot overwrite the start\r\n\r\n    while (currentNode !== startNode) {\r\n      path.push(currentNode);\r\n      if (currentNode._parent === undefined) {\r\n        break;\r\n      }\r\n      currentNode = currentNode._parent;\r\n    }\r\n    //path.Reverse();\r\n    let path2 = path.reverse();\r\n    // the path.length-1 = we dont overwrite the end\r\n    for (let i = 0; i < path.length - 1; i++) {\r\n      setTimeout(() => {\r\n        this._FillSquare(path2[i]._gridX, path2[i]._gridY, \"#2185d0\");\r\n      }, 25 * i);\r\n    }\r\n  } // end of retrace path\r\n} // end of class\r\n\r\nexport default AStar;\r\n","import React, { Component } from \"react\";\r\nimport \"../../Style/Tile.css\"; //.. ===1 ===2\r\nimport NodeGraph from \"./NodeGraph\";\r\nimport AStar from \"./AStar\";\r\n\r\nconst gridColor = \"#2185d0\"; //\"Black\";\r\n\r\nlet myCanvas = \"\";\r\n\r\nlet target = 0;\r\nlet seeker = 0;\r\n\r\nlet Nodes = [];\r\nlet AStarHolder = [];\r\n\r\nlet mouseDown = false;\r\n\r\nlet clickFunction = 0;\r\n\r\nlet heightFromTop = 0;\r\n\r\nlet boardWidth = 900;\r\n\r\nlet boardHeight = 600;\r\n\r\nclass PathFinding extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    myCanvas = \"\";\r\n    Nodes = [];\r\n    AStarHolder = [];\r\n    //let k = window.innerWidth % 30;\r\n    //k = window.innerWidth - k - 30;\r\n    this.state = {\r\n      width: boardWidth, //810,\r\n      height: boardHeight, //600,\r\n      blockSize: 30,\r\n      coordinate: \"0,0\",\r\n\r\n      // hexSize: 50,\r\n      //hexOrigin: { x: 500, y: 100 },\r\n    };\r\n  }\r\n  //\r\n\r\n  componentDidMount() {\r\n    document.title = \"Pathfinding\";\r\n\r\n    //const canvas = this.refs.canvas;\r\n    myCanvas = this.refs.canvas;\r\n    //let k = window.innerWidth % 30;\r\n    //k = window.innerWidth - k - 30;\r\n    //this.setState({ width: k });\r\n\r\n    this.DrawGrid(myCanvas);\r\n    this.getHeight();\r\n  }\r\n\r\n  ReDrawGrid() {\r\n    myCanvas = this.refs.canvas;\r\n    Nodes = [];\r\n    AStarHolder = [];\r\n\r\n    this.DrawGrid(myCanvas);\r\n    this.getHeight();\r\n  }\r\n\r\n  DrawGrid(canvasID) {\r\n    // need our canvas context\r\n    const canvasContext = canvasID.getContext(\"2d\");\r\n\r\n    // grid values we need\r\n    let gridArrayWidth = this.state.width / this.state.blockSize;\r\n    let gridArrayHeight = this.state.height / this.state.blockSize;\r\n\r\n    // we need these values to create our grid and manage our nodes\r\n    let totalLoop = gridArrayWidth * gridArrayHeight;\r\n\r\n    let y = 0;\r\n    let k = 0;\r\n\r\n    // create a grid and a map\r\n    for (let i = 0; i < totalLoop; i++) {\r\n      // create Node\r\n      Nodes.push(new NodeGraph(true, k, y));\r\n\r\n      canvasContext.beginPath();\r\n      canvasContext.rect(\r\n        0 + this.state.blockSize * k,\r\n        0 + this.state.blockSize * y,\r\n        this.state.blockSize,\r\n        this.state.blockSize\r\n      );\r\n      canvasContext.strokeStyle = gridColor;\r\n      canvasContext.lineWidth = 1;\r\n      canvasContext.stroke();\r\n\r\n      k++;\r\n\r\n      if (k >= gridArrayWidth) {\r\n        k = 0;\r\n        y++;\r\n      }\r\n    }\r\n\r\n    // place red tiles on load\r\n    for (let i = 0; i < gridArrayHeight - 1; i++) {\r\n      Nodes[i * gridArrayWidth + 1]._walkNode = false;\r\n      this.FillSquare(1, i, \"Red\");\r\n    }\r\n\r\n    for (let i = 1; i < gridArrayHeight; i++) {\r\n      Nodes[i * gridArrayWidth + gridArrayWidth - 2]._walkNode = false;\r\n      this.FillSquare(gridArrayWidth - 2, i, \"Red\");\r\n    }\r\n\r\n    // end of placing red tiles\r\n\r\n    // place seeker and target and set nodes\r\n\r\n    seeker = 0;\r\n    target = totalLoop - 1;\r\n\r\n    Nodes[seeker]._seeker = true;\r\n    Nodes[target]._target = true;\r\n\r\n    this.FillSquare(Nodes[seeker]._gridX, Nodes[seeker]._gridY, \"Blue\");\r\n    this.FillSquare(Nodes[target]._gridX, Nodes[target]._gridY, \"Yellow\");\r\n\r\n    // create a new Astar class we all the values we've provided. our map doesnt change in size so this is okay.\r\n\r\n    let passMethod = this.FillSquare;\r\n\r\n    AStarHolder = new AStar(\r\n      Nodes,\r\n      this.state.width,\r\n      this.state.height,\r\n      seeker,\r\n      target,\r\n      passMethod\r\n    );\r\n  }\r\n\r\n  getHeight() {\r\n    // get the height of our convas from the top of the page\r\n    var someDiv = document.getElementById(\"canvasID\");\r\n    var distanceToTop = someDiv.getBoundingClientRect().top;\r\n\r\n    heightFromTop = distanceToTop;\r\n    //console.log(heightFromTop);\r\n  }\r\n\r\n  // when we click a button run aStar pathfind method from the class we made in the constructor\r\n  RunAStar = () => {\r\n    this.clearBoard();\r\n    AStarHolder.FindPath(myCanvas, seeker, target);\r\n  };\r\n\r\n  clearBoard(clearAll) {\r\n    const ctx = myCanvas.getContext(\"2d\");\r\n\r\n    let gridArrayWidth = this.state.width / this.state.blockSize;\r\n    let gridArrayHeight = this.state.height / this.state.blockSize;\r\n\r\n    // clearing grid\r\n    let totalLoop = gridArrayWidth * gridArrayHeight;\r\n\r\n    let y = 0;\r\n    let k = 0;\r\n\r\n    /// go through our grid and remove everything that isnt a seeker target or wall\r\n    for (let i = 0; i < totalLoop; i++) {\r\n      if (\r\n        Nodes[i]._walkNode === false ||\r\n        Nodes[i]._seeker === true ||\r\n        Nodes[i]._target === true\r\n      ) {\r\n        if (\r\n          clearAll === true &&\r\n          Nodes[i]._seeker === false &&\r\n          Nodes[i]._target === false\r\n        ) {\r\n          Nodes[i]._walkNode = true;\r\n          ctx.clearRect(\r\n            this.state.blockSize * k + 2,\r\n            this.state.blockSize * y + 2,\r\n            26,\r\n            26\r\n          );\r\n        }\r\n      } else {\r\n        ctx.clearRect(\r\n          this.state.blockSize * k + 2,\r\n          this.state.blockSize * y + 2,\r\n          26,\r\n          26\r\n        );\r\n      }\r\n      k++;\r\n      if (k >= gridArrayWidth) {\r\n        k = 0;\r\n        y++;\r\n      }\r\n    }\r\n  }\r\n\r\n  mouseUp = () => {\r\n    mouseDown = false;\r\n  };\r\n\r\n  mouseDown = (event) => {\r\n    mouseDown = true;\r\n    this.clickBrushFunction(event);\r\n  };\r\n\r\n  clickMe(event) {\r\n    this.clickBrushFunction(event);\r\n  }\r\n\r\n  clickBrushFunction = (event) => {\r\n    // if the event = mouse left click and the its down\r\n    if (event.nativeEvent.which === 1 && mouseDown === true) {\r\n      this.getHeight();\r\n      //  we use setTimeout because it might come in handy later\r\n      setTimeout(() => {\r\n        // we're our x coordinate is negative make it 0 to stop error\r\n        if (event.clientX < 0) {\r\n          event.clientX = 0;\r\n        }\r\n\r\n        // if our y coordiante is too big make it = max height to stop error\r\n        if (\r\n          event.clientY - (heightFromTop - this.state.blockSize) >\r\n          this.state.height\r\n        ) {\r\n          event.clientY =\r\n            this.state.height + (heightFromTop - this.state.blockSize);\r\n        }\r\n\r\n        if (event.clientY < 0) {\r\n          event.clientY = 0;\r\n        }\r\n\r\n        let gridArrayWidth = this.state.width / this.state.blockSize;\r\n        let gridArrayHeight = this.state.height / this.state.blockSize;\r\n\r\n        // get dead space around the grid. we get the deadspace because we need to get rid of the deadspace on the left.\r\n        // if we get rid of the deadspace on the left coordiante 0 will = the start of the grid.\r\n        let getX1 = window.innerWidth - this.state.width;\r\n\r\n        getX1 = getX1 / 2; // we use half because our grid is in the middle. get rid of space on the left with this\r\n\r\n        // if our screen is smaller than our grid do this\r\n        if (window.innerWidth < this.state.width) {\r\n          getX1 = event.clientX;\r\n        } else {\r\n          getX1 = event.clientX - getX1;\r\n        }\r\n\r\n        let x = getX1;\r\n\r\n        // dp the same for y as we did for x\r\n        //let getY1 = document.documentElement.clientHeight - this.state.height;\r\n        //getY1 = getY1 / 2;\r\n        //getY1 = event.clientY - getY1;\r\n\r\n        //let y = getY1; // this only works if its center of the screen vertically\r\n        let y = event.clientY - heightFromTop; // the 63 is the margin from the top // we use manual here\r\n\r\n        let gridX = Math.floor(x / this.state.blockSize);\r\n        let gridY = Math.floor(y / this.state.blockSize);\r\n\r\n        // stop errors\r\n        if (gridX < 0 || gridX === undefined) {\r\n          gridX = 0;\r\n        }\r\n\r\n        if (gridY < 0 || gridY === undefined) {\r\n          gridY = 0;\r\n        }\r\n\r\n        if (gridX > gridArrayWidth) {\r\n          gridX = gridArrayWidth;\r\n        }\r\n\r\n        if (gridY > gridArrayHeight) {\r\n          gridY = gridArrayHeight;\r\n        }\r\n        // end of stop errosr\r\n\r\n        // get the location of our node via math\r\n        let nodeLocation = gridX + gridY * gridArrayWidth;\r\n\r\n        //let coorUpdate = x + \",\" + y;\r\n\r\n        // give array coordinate\r\n        let coorUpdate =\r\n          Nodes[nodeLocation]._gridX + \",\" + Nodes[nodeLocation]._gridY; //myGridY[gridY];\r\n        this.setState({ coordinate: coorUpdate });\r\n\r\n        // 0 = create 1 = clear 2 = move seeker 3 = move target\r\n        if (clickFunction === 0) {\r\n          this.WallMode(nodeLocation, gridX, gridY, false);\r\n        } else if (clickFunction === 1) {\r\n          this.WallMode(nodeLocation, gridX, gridY, true);\r\n        } else if (clickFunction === 2) {\r\n          this.seekerBrush(nodeLocation, gridX, gridY);\r\n        } else if (clickFunction === 3) {\r\n          this.targetBrush(nodeLocation, gridX, gridY);\r\n        }\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  // set the value we need to switch for our brush\r\n  SetDrawMode(number) {\r\n    clickFunction = number;\r\n  }\r\n\r\n  // set or clear walls depending on the clearMode variable\r\n  WallMode(nodeLocation, gridX, gridY, clearMode) {\r\n    if (clearMode === false) {\r\n      if (\r\n        Nodes[nodeLocation]._walkNode === true &&\r\n        Nodes[nodeLocation]._seeker === false &&\r\n        Nodes[nodeLocation]._target === false\r\n      ) {\r\n        this.FillSquare(gridX, gridY, \"Red\");\r\n        Nodes[nodeLocation]._walkNode = false;\r\n      }\r\n    } else if (\r\n      Nodes[nodeLocation]._seeker === false &&\r\n      Nodes[nodeLocation]._target === false\r\n    ) {\r\n      Nodes[nodeLocation]._walkNode = true;\r\n      this.clearGridSquare(gridX, gridY);\r\n    }\r\n  }\r\n\r\n  // set the seeker\r\n  seekerBrush(nodeLocation, gridX, gridY) {\r\n    if (\r\n      Nodes[nodeLocation]._walkNode === true &&\r\n      Nodes[nodeLocation]._target === false\r\n    ) {\r\n      // clear our previous seeker square and its special node values\r\n      this.clearGridSquare(Nodes[seeker]._gridX, Nodes[seeker]._gridY);\r\n\r\n      Nodes[seeker]._seeker = false;\r\n      Nodes[seeker]._walkNode = true;\r\n\r\n      // set our new seeker square and its new node values\r\n      this.FillSquare(gridX, gridY, \"Blue\");\r\n      Nodes[nodeLocation]._seeker = true;\r\n      seeker = nodeLocation;\r\n    }\r\n  }\r\n\r\n  // set the target\r\n  targetBrush(nodeLocation, gridX, gridY) {\r\n    if (\r\n      Nodes[nodeLocation]._walkNode === true &&\r\n      Nodes[nodeLocation]._seeker === false\r\n    ) {\r\n      // clear our previous target square and its special node values\r\n      this.clearGridSquare(Nodes[target]._gridX, Nodes[target]._gridY);\r\n\r\n      Nodes[target]._target = false;\r\n      Nodes[target]._walkNode = true;\r\n\r\n      // set our new target square and its new node values\r\n      this.FillSquare(gridX, gridY, \"Yellow\");\r\n      Nodes[nodeLocation]._target = true;\r\n      target = nodeLocation;\r\n    }\r\n  }\r\n\r\n  // clear grid square\r\n  clearGridSquare(x, y) {\r\n    const ctx = myCanvas.getContext(\"2d\");\r\n\r\n    ctx.clearRect(\r\n      this.state.blockSize * x + 2,\r\n      this.state.blockSize * y + 2,\r\n      26,\r\n      26\r\n    );\r\n  }\r\n\r\n  // fill a grid square\r\n  FillSquare(x, y, color) {\r\n    const ctx = myCanvas.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(\r\n      30 * x + 2, // this.state.blocksize\r\n      30 * y + 2,\r\n      26,\r\n      26\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  handleChange(event) {\r\n    boardWidth = event.target.value;\r\n    this.setState({ width: boardWidth }, () => {\r\n      let k = this.state.width % 30;\r\n      k = this.state.width - k;\r\n      this.setState({ width: k }, () => {\r\n        this.ReDrawGrid();\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChangeHeight(event) {\r\n    boardHeight = event.target.value;\r\n    this.setState({ height: boardHeight }, () => {\r\n      let k = this.state.height % 30;\r\n      k = this.state.height - k;\r\n      this.setState({ height: k }, () => {\r\n        this.ReDrawGrid();\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //const { coordinate } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"containerPathFinding\" style={{ minHeight: \"795px\" }}>\r\n            <h1\r\n              className=\"ui header\"\r\n              style={{\r\n                paddingTop: \"24px\",\r\n                color: \"white\",\r\n                marginTop: \"1px\",\r\n              }}\r\n            >\r\n              AStar Pathfinding\r\n            </h1>\r\n            <div>\r\n              <p\r\n                style={{\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {this.state.coordinate}\r\n              </p>\r\n            </div>\r\n            <div id=\"canvasID\">\r\n              <canvas\r\n                ref=\"canvas\"\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                //onClick={this.clickBrushFunction}\r\n                onMouseDown={this.mouseDown}\r\n                onMouseMove={(e) => {\r\n                  this.clickMe(e);\r\n                }} //{this.clickBrushFunction}\r\n                onMouseUp={this.mouseUp}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"\">\r\n          <div className=\"ui nine column grid blackBC\">\r\n            <div className=\"column black\" style={{ maxWidth: \"300px\" }}>\r\n              <h1>Width</h1>\r\n              <input\r\n                className=\"speed\"\r\n                type=\"range\"\r\n                min=\"90\"\r\n                max=\"900\"\r\n                value={this.state.width}\r\n                onChange={this.handleChange.bind(this)}\r\n              ></input>\r\n              <div className=\"twoEnds\">\r\n                <div>Small</div> <div>Large</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"column black\" style={{ maxWidth: \"300px\" }}>\r\n              <h1>Height</h1>\r\n              <input\r\n                className=\"speed\"\r\n                type=\"range\"\r\n                min=\"90\"\r\n                max=\"600\"\r\n                value={this.state.height}\r\n                onChange={this.handleChangeHeight.bind(this)}\r\n              ></input>\r\n              <div className=\"twoEnds\">\r\n                <div>Small</div> <div>Large</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"column black\">\r\n              <h1>Reset</h1>\r\n              <button\r\n                className=\"ui button red\"\r\n                onClick={() => {\r\n                  this.clearBoard(true);\r\n                }}\r\n              >\r\n                CLEAR ALL\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <h1>Clean</h1>\r\n              <button\r\n                className=\"ui button primary\"\r\n                onClick={() => {\r\n                  this.clearBoard(false);\r\n                }}\r\n              >\r\n                CLEAN BOARD\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <h1>Start</h1>\r\n              <button className=\"ui button primary\" onClick={this.RunAStar}>\r\n                RUN ASTAR\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <h1>Wall Brush</h1>\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(0);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"red\" }}\r\n                ></span>\r\n                Create Walls\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <h1>Clear Brush</h1>\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(1);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"black\" }}\r\n                ></span>\r\n                Clear Walls\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <h1>Move Seeker</h1>\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(2);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"Blue\" }}\r\n                ></span>\r\n                Move Seeker\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <h1>Move Target</h1>\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(3);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"Yellow\" }}\r\n                ></span>\r\n                Move Target\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PathFinding;\r\n\r\n/*\r\n<div className=\"ui five column grid black centerContent\" style={{}}>\r\n            <div className=\"column black\">\r\n              <button className=\"ui button primary\" onClick={this.RunAStar}>\r\n                RUN ASTAR\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <button\r\n                className=\"ui button primary\"\r\n                onClick={() => {\r\n                  this.clearBoard(true);\r\n                }}\r\n              >\r\n                HARD RESET\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <button\r\n                className=\"ui button primary\"\r\n                onClick={() => {\r\n                  this.clearBoard(false);\r\n                }}\r\n              >\r\n                CLEAN BOARD\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\" style={{ maxWidth: \"300px\" }}>\r\n              <h1>Width</h1>\r\n              <input\r\n                className=\"speed\"\r\n                type=\"range\"\r\n                min=\"90\"\r\n                max={900}\r\n                value={this.state.width}\r\n                onChange={this.handleChange.bind(this)}\r\n              ></input>\r\n              <div className=\"twoEnds\">\r\n                <div>Small</div> <div>Large</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"column black\" style={{ maxWidth: \"300px\" }}>\r\n              <h1>Height</h1>\r\n              <input\r\n                className=\"speed\"\r\n                type=\"range\"\r\n                min=\"90\"\r\n                max=\"480\"\r\n                value={this.state.height}\r\n                onChange={this.handleChangeHeight.bind(this)}\r\n              ></input>\r\n              <div className=\"twoEnds\">\r\n                <div>Small</div> <div>Large</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"ui one column grid black centerContent\">\r\n            <div className=\"column black\">\r\n              <h1>Brushes</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"ui four column grid black centerContent\">\r\n            <div className=\"column black\">\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(0);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"red\" }}\r\n                ></span>\r\n                Create Walls\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(1);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"Black\" }}\r\n                ></span>\r\n                Clear Walls\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(2);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"Blue\" }}\r\n                ></span>\r\n                Move Seeker\r\n              </button>\r\n            </div>\r\n            <div className=\"column black\">\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => {\r\n                  this.SetDrawMode(3);\r\n                }}\r\n              >\r\n                <span\r\n                  className=\"buttonBlock\"\r\n                  style={{ backgroundColor: \"Yellow\" }}\r\n                ></span>\r\n                Move Target\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        */\r\n\r\n/* speed bar\r\n<div className=\"ui one column grid blackBC\">\r\n            <div className=\"column black\" style={{ maxWidth: \"300px\" }}>\r\n              <h1>Speed</h1>\r\n              <input\r\n                className=\"speed\"\r\n                type=\"range\"\r\n                min=\"6\"\r\n                max=\"100\"\r\n                value={this.state.speed}\r\n                onChange={this.handleChange.bind(this)}\r\n              ></input>\r\n              <div className=\"twoEnds\">\r\n                <div>Fast</div> <div>Slow</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n// bottom button\r\n<div className=\"ui one column grid blackBC\">\r\n              <div className=\"column black\" style={{ maxWidth: \"300px\" }}>\r\n                <button className=\"ui button primary\" onClick={this.RunAStar}>\r\n                  Clear Board\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          */\r\n","import React from \"react\";\r\n\r\nconst SearchArea = (props) => {\r\n  return (\r\n    <div className=\"container\" style={{ padding: \"25px\", fontSize: \"1.3em\" }}>\r\n      <div className=\"row\">\r\n        <section className=\"col\">\r\n          <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <div className=\"ui icon input\">\r\n              <input\r\n                placeholder=\"Search movie\"\r\n                type=\"text\"\r\n                onChange={props.handleChange}\r\n              />\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchArea;\r\n","//import React, { Component } from \"react\";\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <div className=\"column\">\r\n      <div\r\n        className=\"card\"\r\n        style={{ padding: \"5px\", backgroundColor: \"white\" }}\r\n      >\r\n        <div className=\"\">\r\n          {props.image == null ? (\r\n            <img\r\n              src={\r\n                \"https://d2hqr1s9kfm9jo.cloudfront.net/production/images/sales_agents/17095/data.profile.?1577457456\"\r\n              }\r\n              alt=\"card\"\r\n              style={{ width: \"100%\", height: 360 }}\r\n            />\r\n          ) : (\r\n            <img\r\n              src={\r\n                \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" + props.image\r\n              }\r\n              alt=\"card\"\r\n              style={{ width: \"100%\", height: 360 }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <p>\r\n            <button\r\n              style={{\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"white\",\r\n                border: \"0px\",\r\n                color: \"blue\",\r\n              }}\r\n              onClick={() => {\r\n                props.viewMovieInfo(props.movieId);\r\n                // console.log(props);\r\n                //console.log(viewMovieInfo)\r\n              }}\r\n            >\r\n              View Details\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"./Movie.jsx\";\r\n\r\nconst MoveList = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"container2\"\r\n        style={{ marginRight: \"20px\", marginLeft: \"20px\" }}\r\n      >\r\n        <div\r\n          className=\"ui five column grid\"\r\n          style={{ maxWidth: \"1400px\", margin: \"auto\" }}\r\n        >\r\n          {props.movies.map((movie, i) => {\r\n            return (\r\n              <Movie\r\n                key={i}\r\n                viewMovieInfo={props.viewMovieInfo}\r\n                movieId={movie.id}\r\n                image={movie.poster_path}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveList;\r\n","//import React, { Component } from \"react\";\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n    <div className=\"container\" style={{ minHeight: \"100vh\" }}>\r\n      <div className=\"row\">\r\n        <div className=\"row\" style={{ paddingTop: 50 }}>\r\n          <i className=\"fa fas fa-arrow-left\">\r\n            <span\r\n              onClick={props.closeMovieInfo}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                maxWidth: \"800px\",\r\n                fontSize: \"1.3em\",\r\n                marginRight: 725,\r\n                marginLeft: \"15px\",\r\n                color: \"blue\",\r\n              }}\r\n            >\r\n              Go Back\r\n            </span>\r\n          </i>\r\n        </div>\r\n        <div\r\n          className=\"ui two column grid\"\r\n          style={{ margin: \"auto\", maxWidth: \"800px\" }}\r\n        >\r\n          <div className=\"column\">\r\n            {props.currentMovie.poster_path == null ? (\r\n              <img\r\n                src={\r\n                  \"https://d2hqr1s9kfm9jo.cloudfront.net/production/images/sales_agents/17095/data.profile.?1577457456\"\r\n                }\r\n                alt=\"card\"\r\n                style={{ width: \"100%\", height: 360 }}\r\n              />\r\n            ) : (\r\n              <img\r\n                src={\r\n                  \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" +\r\n                  props.currentMovie.poster_path\r\n                }\r\n                alt=\"card\"\r\n                style={{ width: \"100%\", height: 360 }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"column\" style={{}}>\r\n            <div className=\"info-container\" style={{ color: \"white\" }}>\r\n              <p>{props.currentMovie.title}</p>\r\n              <p>\r\n                {props.currentMovie.release_date\r\n                  .substring(7, 10)\r\n                  .split(\"-\")\r\n                  .concat(props.currentMovie.release_date.substring(5, 7))\r\n                  .concat(props.currentMovie.release_date.substring(0, 4))\r\n                  .join(\"/\")\r\n                  .substring(1)}\r\n              </p>\r\n              <p> {props.currentMovie.overview}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","//import React, { Component } from \"react\";\r\nimport \"../../../Style/home.css\";\r\n\r\nconst Pagination = (props) => {\r\n  const pageLinks = [];\r\n  for (let i = 1; i <= props.pages + 1; i++) {\r\n    let active = \"\";\r\n\r\n    if (props.currentPage === i) {\r\n      active = \"active\";\r\n    } else {\r\n      active = \"notactive\";\r\n    }\r\n\r\n    // let active = props.currentpage - 1 == i ?  : \"notactive\";\r\n\r\n    pageLinks.push(\r\n      <span\r\n        className={\"spread \"}\r\n        key={i}\r\n        onClick={() => {\r\n          props.nextPage(i);\r\n        }}\r\n      >\r\n        <button\r\n          className={active}\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"black\",\r\n            border: \"0px\",\r\n            color: \"blue\",\r\n          }}\r\n        >\r\n          {i}\r\n        </button>\r\n      </span>\r\n    );\r\n\r\n    if (i === 10) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  /*\r\n\r\n  <button href=\"\" className={\"ui secondary button \" + active}>\r\n          {i}\r\n        </button>\r\n  */\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{ paddingTop: \"30px\", paddingBottom: \"30px\" }}\r\n    >\r\n      <div className=\"row\">\r\n        <ul className=\"ui massive  horizontal list \">\r\n          {props.currentPage > 1 ? (\r\n            <span\r\n              className={\"spread\"}\r\n              onClick={() => {\r\n                props.nextPage(props.currentPage - 1);\r\n              }}\r\n            >\r\n              <button\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: \"black\",\r\n                  border: \"0px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                Prev\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            <span className={\"spread\"}>\r\n              <button\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: \"black\",\r\n                  border: \"0px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                Prev\r\n              </button>\r\n            </span>\r\n          )}\r\n\r\n          {pageLinks}\r\n\r\n          {props.currentPage < props.pages + 2 ? (\r\n            props.currentPage < props.pages + 1 && props.currentPage < 10 ? (\r\n              <span\r\n                className={\"spread\"}\r\n                onClick={() => {\r\n                  props.nextPage(props.currentPage + 1);\r\n                }}\r\n              >\r\n                <button\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"black\",\r\n                    border: \"0px\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  Next\r\n                </button>\r\n              </span>\r\n            ) : (\r\n              <span className={\"spread\"}>\r\n                <button\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"black\",\r\n                    border: \"0px\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  Next\r\n                </button>\r\n              </span>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport SearchArea from \"./MovieComponents/SearchArea.jsx\";\r\nimport MovieList from \"./MovieComponents/MovieList.jsx\";\r\nimport MovieInfo from \"./MovieComponents/MovieInfo.jsx\";\r\n\r\nimport Pagination from \"./MovieComponents/Pagination.jsx\";\r\n//import MoveList from \"./MovieComponents/MovieList.jsx\";\r\n\r\nclass MovieHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movies: [],\r\n      searchTerm: \"\",\r\n      totalResults: 0,\r\n      currentPage: 1,\r\n      currentMovie: null,\r\n    };\r\n    this.apiKey = process.env.REACT_APP_API; // this works offline for hiding our key and when we deplay the enviornment variable wont be deployed.\r\n\r\n    if (this.apiKey === undefined || this.apiKey === \"\") {\r\n      this.apiKey = \"fa12b6aa6d82e63276b97f21664efd3a\"; // this is not best practise. You should make api calls with a private key through a server\r\n      // E.G handle submit (the method below this) should run on a server with the key stored there away from client eyes.\r\n      // then can call that servers function and it will return our data.\r\n      //https://stackoverflow.com/questions/48699820/how-do-i-hide-api-key-in-create-react-app 2nd answer here for details\r\n      // tldr anything stored on the client can be read by the client. General rule.\r\n    }\r\n    //console.log(this.apiKey);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.searchTerm.length !== 0) {\r\n      fetch(\r\n        \"https://api.themoviedb.org/3/search/movie?api_key=\" +\r\n        this.apiKey +\r\n        \"&query=\" +\r\n        this.state.searchTerm\r\n      )\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          //console.log(data);\r\n          this.setState({\r\n            movies: [...data.results],\r\n            totalResults: data.total_results,\r\n          });\r\n\r\n          let array1 = [];\r\n          for (let i = 0; i < this.state.movies.length; i++) {\r\n            array1.push(this.state.movies[i]);\r\n          }\r\n          this.setState({ movies: array1 });\r\n\r\n          //console.log(data.total_results);\r\n          //console.log(this.state.totalResults);\r\n        });\r\n    } else {\r\n    }\r\n    /*console.log(\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=\" +\r\n        this.apiKey +\r\n        \"&query=\" +\r\n        this.state.searchTerm\r\n    );*/\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.title = \"Movie Search API\";\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=\" +\r\n      this.apiKey +\r\n      \"&query=\" +\r\n      \"A\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        this.setState({\r\n          movies: [...data.results],\r\n          totalResults: data.total_results,\r\n        });\r\n\r\n        let array1 = [];\r\n        for (let i = 0; i < this.state.movies.length; i++) {\r\n          array1.push(this.state.movies[i]);\r\n        }\r\n        this.setState({ movies: array1, searchTerm: \"a\" });\r\n\r\n        //console.log(data.total_results);\r\n        //console.log(this.state.totalResults);\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchTerm: e.target.value });\r\n  };\r\n\r\n  nextPage = (pageNumber) => {\r\n    let array1 = [];\r\n\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=\" +\r\n      this.apiKey +\r\n      \"&query=\" +\r\n      this.state.searchTerm +\r\n      \"&page=\" +\r\n      pageNumber\r\n    )\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n\r\n        this.setState({ movies: [...data.results], currentPage: pageNumber });\r\n        //\r\n        for (let i = 0; i < this.state.movies.length; i++) {\r\n          array1.push(this.state.movies[i]);\r\n        }\r\n        this.setState({ movies: array1 });\r\n      });\r\n  };\r\n\r\n  viewMovieInfo = (id) => {\r\n    //console.log(\"this.viewMovieInfo\");\r\n    const filteredMovie = this.state.movies.filter((movie) => movie.id === id);\r\n\r\n    const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null;\r\n\r\n    //console.log(currentMovie);\r\n\r\n    this.setState({ currentMovie: newCurrentMovie });\r\n  };\r\n\r\n  closeMovieInfo = () => {\r\n    this.setState({ currentMovie: null });\r\n  };\r\n\r\n  render() {\r\n    const numberPages = Math.floor(this.state.totalResults / 20);\r\n    return (\r\n      <div>\r\n        {this.state.currentMovie == null ? (\r\n          <div className=\"container\" style={{ minHeight: \"100vh\" }}>\r\n            <h1 style={{ color: \"white\", paddingTop: \"25px\" }}>\r\n              Movie Search (TMDB API)\r\n            </h1>\r\n            <SearchArea\r\n              handleSubmit={this.handleSubmit}\r\n              handleChange={this.handleChange}\r\n            />\r\n            <MovieList\r\n              viewMovieInfo={this.viewMovieInfo}\r\n              movies={this.state.movies}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <MovieInfo\r\n            currentMovie={this.state.currentMovie}\r\n            closeMovieInfo={this.closeMovieInfo}\r\n          />\r\n        )}\r\n\r\n        {this.state.totalResults > 20 && this.state.currentMovie == null ? (\r\n          <Pagination\r\n            pages={numberPages}\r\n            nextPage={this.nextPage}\r\n            currentPage={this.state.currentPage}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieHome;\r\n","import React, { Component } from \"react\";\n\nclass HomeData extends Component {\n  state = {};\n\n  componentDidMount() {\n    document.title = \"Xavier Purcell's Portfolio\";\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 style={{ paddingTop: \"50px\", color: \"white\" }}>Home</h1>\n        <p\n          style={{\n            color: \"white\",\n            paddingTop: \"50px\",\n            fontSize: \"20px\",\n            maxWidth: \"920px\",\n            margin: \"auto\",\n          }}\n        >\n          This is a GitHub Page I originally created to learn Javascript and\n          React. Here you can find a few different projects I've created.\n        </p>\n        <p\n          style={{\n            color: \"white\",\n            paddingTop: \"25px\",\n            marginBottom: \"0px\",\n            fontSize: \"20px\",\n          }}\n        >\n          Haven't added any media queries so smaller screens/mobile won't work!\n        </p>\n        <p\n          style={{\n            color: \"white\",\n            paddingTop: \"25px\",\n            marginBottom: \"0px\",\n            fontSize: \"20px\",\n          }}\n        >\n          Click on the tabs at the top to visit the different projects. Use the\n          buttons at the bottom to play around with them.\n        </p>\n        <p\n          style={{\n            color: \"white\",\n            paddingTop: \"25px\",\n            marginBottom: \"0px\",\n            fontSize: \"20px\",\n          }}\n        >\n          I've added an about section to see how it interacts with SEO.\n        </p>\n        <p\n          style={{\n            color: \"white\",\n            paddingTop: \"25px\",\n            marginBottom: \"0px\",\n            fontSize: \"20px\",\n          }}\n        >\n          Email: xpurcell@live.com\n        </p>\n\n        <h1 style={{ paddingTop: \"250px\", color: \"white\" }}>About</h1>\n        <p\n          style={{\n            color: \"white\",\n            paddingTop: \"25px\",\n            marginBottom: \"0px\",\n            fontSize: \"16px\",\n            maxWidth: \"920px\",\n            margin: \"auto\",\n          }}\n        >\n          My name is Xavier Purcell, I'm a computer scientist. I have experience\n          in game development and web development. I very much believe in the\n          keep it simple, stupid! Principle.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default HomeData;\n","export function rightButton() {\r\n  var cards = document.getElementsByClassName(\"unityCard\");\r\n\r\n  // right working\r\n  for (var i = 0; i < cards.length; i++) {\r\n    if (cards.length - 2 - i < 0) {\r\n      break;\r\n    }\r\n\r\n    cards[cards.length - 1 - i].insertAdjacentElement(\r\n      \"afterend\",\r\n      cards[cards.length - 2 - i]\r\n    );\r\n  }\r\n\r\n  enablePosts();\r\n}\r\n\r\nexport function leftButton() {\r\n  var cards = document.getElementsByClassName(\"unityCard\");\r\n\r\n  // left working\r\n\r\n  for (var i = 0; i < cards.length; i++) {\r\n    if (i + 1 === cards.length) {\r\n      break;\r\n    }\r\n    cards[i].insertAdjacentElement(\"beforebegin\", cards[i + 1]);\r\n  }\r\n\r\n  enablePosts();\r\n}\r\n\r\nfunction enablePosts() {\r\n  var video = document.querySelector(\"#vidBox\");\r\n\r\n  video.pause();\r\n  video.currentTime = 0;\r\n  var cards = document.getElementsByClassName(\"unityCard\");\r\n\r\n  // maybe we just want to show 1 post when on a smaller screen but thats a future problem, just leaving here for later\r\n  var width = window.matchMedia(\"(max-width: 1050px)\");\r\n  width = width.matches;\r\n  width = false;\r\n  //\r\n  for (var i = 0; i < cards.length; i++) {\r\n    if (width == true && i < 1) {\r\n      cards[i].style.display = \"block\";\r\n    } else if (i < 1 && width == false) {\r\n      cards[i].style.display = \"block\";\r\n    } else {\r\n      cards[i].style.display = \"none\";\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass VideoTemplate extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"unityCard\" style={{ display: this.props.display }}>\r\n          <h1 style={{ color: \"white\" }}>{this.props.title1}</h1>\r\n          <div class=\"unityCardMiddle\">\r\n            <a href={this.props.link1}>\r\n              <video\r\n                alt=\"Video from Gyazo\"\r\n                width=\"920\"\r\n                autoplay\r\n                muted\r\n                loop\r\n                playsinline\r\n                controls\r\n                id=\"vidBox\"\r\n              >\r\n                <source src={this.props.src1} type=\"video/mp4\" />\r\n              </video>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoTemplate;\r\n","import React, { Component } from \"react\";\nimport \"../../Style/unity.css\"; //.. ===1 ===2\nimport ScrollThrough, { leftButton, rightButton } from \"./SlideFunctions.jsx\";\n\nimport VideoTemplate from \"./VideoTemplate.jsx\";\n\nclass UnityManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    document.title = \"Unity Projects\";\n  }\n\n  rightB() {\n    const animationHolder = rightButton();\n  }\n\n  leftB() {\n    const left = leftButton();\n  }\n\n  render() {\n    return (\n      <div className=\"container\" style={{ minHeight: \"90vh\" }}>\n        <h4 style={{ color: \"white\", paddingTop: \"50px\" }}>\n          Some basic 2D mechanics I've implemented. Most of the effects aren't\n          very polished been more concerned with just making things work.\n        </h4>\n        <VideoTemplate\n          title1={\"Water Effect\"}\n          display=\"block\"\n          link1={\"https://gyazo.com/6f0b4843a35d9e9bc873834138f506e7\"}\n          src1={\"https://i.gyazo.com/6f0b4843a35d9e9bc873834138f506e7.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Dash Effect + UI\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/eebf8899ed544a594a13026ee6518eda\"}\n          src1={\"https://i.gyazo.com/eebf8899ed544a594a13026ee6518eda.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Platformer with variable controls\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/f5c29e9e98d8a0819f2e89c1064e5bf3\"}\n          src1={\"https://gyazo.com/f5c29e9e98d8a0819f2e89c1064e5bf3.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Lightning Effect\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/3106041ee379747640550dc5eac36b38\"}\n          src1={\"https://i.gyazo.com/3106041ee379747640550dc5eac36b38.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Fire Effect\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/f06231dc9ca1497785413492e1fb0178\"}\n          src1={\"https://i.gyazo.com/f06231dc9ca1497785413492e1fb0178.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Light Effect\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/45d2df5781e9bb4ff67def58f7609d4e\"}\n          src1={\"https://i.gyazo.com/45d2df5781e9bb4ff67def58f7609d4e.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Tile Attack\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/3b654ab210aff608d9cd0180fad21017\"}\n          src1={\"https://i.gyazo.com/3b654ab210aff608d9cd0180fad21017.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Unfinished Tile Attack\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/bd262878a22a5a8689c68b8165220123\"}\n          src1={\"https://i.gyazo.com/bd262878a22a5a8689c68b8165220123.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Trigonometry Movement\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/13c7a26642eae310c5b3b6d39418088c\"}\n          src1={\"https://i.gyazo.com/13c7a26642eae310c5b3b6d39418088c.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Boomerang + Bow\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/ed8954c99a1ea85c881b86de30488574\"}\n          src1={\"https://i.gyazo.com/ed8954c99a1ea85c881b86de30488574.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Simple Enemy Walk + Swing\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/3ac5336e7147f059bf8b919d34bd146c\"}\n          src1={\"https://i.gyazo.com/3ac5336e7147f059bf8b919d34bd146c.mp4\"}\n        />\n\n        <VideoTemplate\n          title1={\"Sword Swing With Trigonometry\"}\n          display=\"none\"\n          link1={\"https://gyazo.com/74be24c66b5877137069f5b5bc402a33\"}\n          src1={\"https://i.gyazo.com/74be24c66b5877137069f5b5bc402a33.mp4\"}\n        />\n\n        <div class=\"caraButtons\">\n          <button\n            className=\"ui button\"\n            onClick={() => this.rightB()} //}  //this.Promise()\n          >\n            Previous\n          </button>\n          <button\n            className=\"ui button\"\n            onClick={() => this.leftB()} //}  //this.Promise()\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UnityManager;\n","export default __webpack_public_path__ + \"static/media/cs-town-planning.3a434cae.png\";","export default __webpack_public_path__ + \"static/media/UQ Res.50f785bf.png\";","export default __webpack_public_path__ + \"static/media/pasta-poetry.f64facdc.png\";","export default __webpack_public_path__ + \"static/media/gas-guyz.b5bef6b7.png\";","export default __webpack_public_path__ + \"static/media/chriss-moss.72f0f0ec.png\";","export default __webpack_public_path__ + \"static/media/twitter pic.13dd827f.png\";","export default __webpack_public_path__ + \"static/media/Apple Clone.3524c857.png\";","let CreateProject = (props) => {\n  return (\n    <div\n      style={{\n        backgroundColor: props.backgroundColor,\n        color: \"white\",\n        paddingTop: \"50px\",\n        paddingBottom: \"50px\",\n      }}\n    >\n      <div style={{ maxWidth: \"800px\", margin: \"auto\" }}>\n        <div>\n          <h2> {props.titleInfo}</h2>\n          <h3>\n            <a href={props.urlInfo}>{props.urlInfo}</a>\n          </h3>\n          <h4>{props.roleInfo}</h4>\n          {props.extraInfo !== \"\" ? <h4>{props.extraInfo}</h4> : \"\"}\n        </div>\n        <img\n          src={props.projectImage}\n          style={{ maxWidth: \"800px\", marginTop: \"50px\" }}\n        ></img>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateProject;\n","import \"../../Style/WebPortfolio.css\"; //.. ===1 ===2\nimport cs from \"../../Pictures/cs-town-planning.png\";\nimport uq from \"../../Pictures/UQ Res.png\";\nimport pp from \"../../Pictures/pasta-poetry.png\";\nimport gg from \"../../Pictures/gas-guyz.png\";\nimport cm from \"../../Pictures/chriss-moss.png\";\nimport tp from \"../../Pictures/twitter pic.png\";\nimport ap from \"../../Pictures/Apple Clone.png\";\nimport React, { useState, useEffect } from \"react\";\nimport Project from \"./CreateProject\";\n\nfunction Welcome(props) {\n  useEffect(() => {\n    document.title = \"Web Portfolio\";\n  });\n\n  let messageState = useState(\"sd\");\n  const [count, setCount] = useState(0);\n\n  return (\n    <content>\n      <h1\n        style={{\n          color: \"white\",\n          backgroundColor: \"black\",\n          margin: \"0px\",\n          paddingTop: \"25px\",\n        }}\n      >\n        Projects\n      </h1>\n\n      <Project\n        backgroundColor={\"black\"}\n        titleInfo=\"UQ Residence (University of Queensland)\"\n        urlInfo=\"https://uqres.com/\"\n        roleInfo=\"Wordspress site\"\n        extraInfo=\"Using Starrez API's created the Student booking system for the University of Queensland. It sold out! (500+ rooms). It has seasonal functionality.\"\n        projectImage={uq}\n      ></Project>\n\n      <Project\n        backgroundColor={\"#131313\"}\n        titleInfo=\"Twitter Clone\"\n        urlInfo=\"https://twitter-clone-delta-three.vercel.app/\"\n        roleInfo=\"NextJS/Firebase Site\"\n        extraInfo=\"Log in with Github/Gmail to see a basic CRUD website made with Firebase and NextJS\"\n        projectImage={tp}\n      ></Project>\n\n\n      <Project\n        backgroundColor={\"black\"}\n        titleInfo=\"Apple Ecommerce Clone\"\n        urlInfo=\"https://appleclone-xavierpurcell.vercel.app/\"\n        roleInfo=\"NextJS/Sanity/Stripe Site\"\n        extraInfo=\"Created an Ecommerce site that runs using the Stripe API and a Sanity backend.\"\n        projectImage={ap}\n      ></Project>\n\n      <Project\n        backgroundColor={\"#131313\"}\n        titleInfo=\"CS Town Planning\"\n        urlInfo=\"https://www.cstownplanning.com.au/\"\n        roleInfo=\"Wordpress site\"\n        extraInfo=\"Created the site in 5 Weeks for CS Town Planning. Used ACF and custom Gutenberg blocks.\"\n        projectImage={cs}\n      ></Project>\n\n      <Project\n        backgroundColor={\"black\"}\n        titleInfo=\"Gas Guyz\"\n        urlInfo=\"https://gasguyz.com.au/\"\n        roleInfo=\"Shopify site\"\n        extraInfo=\"Added additional features/support using Liquid and JS\"\n        projectImage={gg}\n      ></Project>\n\n      <Project\n        backgroundColor={\"#131313\"}\n        titleInfo=\"Pasta Poetry\"\n        urlInfo=\"https://pastapoetry.com.au/\"\n        roleInfo=\"Shopify site\"\n        extraInfo=\"Customized the site using JS and Liquid.\"\n        projectImage={pp}\n      ></Project>\n\n      <Project\n        backgroundColor={\"black\"}\n        titleInfo=\"Chriss Moss\"\n        urlInfo=\"https://www.chrismoss.com.au/\"\n        roleInfo=\"Wordpress site\"\n        extraInfo=\"Provided Bugfixes/support\"\n        projectImage={cm}\n      ></Project>\n    </content>\n  );\n}\n\nexport default Welcome;\n","import React, { Component } from \"react\";\r\n\r\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n//import { Input, Menu, Segment } from \"semantic-ui-react\";\r\n//import pic1 from \"./Pictures/sortingvisualizer.png\";\r\n\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { NavBar } from \"./components/NavBar.jsx\";\r\nimport SortingManager from \"./components/SortingVisualizer/SortingManager.jsx\";\r\nimport PathFinding from \"./components/AStar/PathFinding.jsx\";\r\nimport MovieHome from \"./components/MovieAPI/MovieHome.jsx\";\r\nimport HomeData from \"./components/Home/HomeData\";\r\nimport UnityManager from \"./components/Unity/UnityManager.jsx\";\r\nimport WebPortfolio from \"./components/WebPortfolio/WebPortfolio.jsx\";\r\n\r\nimport \"./Style/SortingVisualizer.css\"; // my css\r\n\r\nlet width = window.innerWidth;\r\nlet limit = 900;\r\nlet limitS = \"900\";\r\n\r\nconst divStyle = {\r\n  color: \"white\",\r\n};\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleEntailmentRequest = (e) => {\r\n    /*window.open(\r\n      \"https://support.wwf.org.uk/earth_hour/index.php?type=individual\",\r\n      \"_blank\" // <- This is what makes it open in a new window.\r\n    );*/\r\n    window.location.assign(\"https://github.com/xavierpurcell\");\r\n  };\r\n\r\n  handleEntailmentRequestTwitter = (e) => {\r\n    window.location.assign(\"https://twitter-clone-delta-three.vercel.app/\");\r\n  };\r\n\r\n  render() {\r\n    if (width < limit) {\r\n      return (\r\n        <div>\r\n          <h2 style={divStyle}>\r\n            Please Use a Screen that has a Width > {\"\" + limit}\r\n          </h2>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Router basename=\"/\">\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomeData />\r\n            </Route>\r\n            <Route exact path=\"/sortingvisualizer\">\r\n              <SortingManager />\r\n            </Route>\r\n            <Route exact path=\"/pathfinding\">\r\n              <PathFinding />\r\n            </Route>\r\n            <Route exact path=\"/moviesearchapi\">\r\n              <MovieHome />\r\n            </Route>\r\n            <Route exact path=\"/unity\">\r\n              <UnityManager />\r\n            </Route>\r\n            <Route exact path=\"/twitter-clone-delta-three.vercel.app/\">\r\n              {this.handleEntailmentRequestTwitter}\r\n            </Route>\r\n            <Route exact path=\"/WebPortfolio\">\r\n              <WebPortfolio />\r\n            </Route>\r\n            <Route exact path=\"/GitHub\">\r\n              {this.handleEntailmentRequest}\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n/*\r\n\r\n <p style={{ color: \"white\", padding: \"50px\", fontSize: \"20px\" }}>\r\n                I created this site to learn Javascript and React. Here you can\r\n                find a few different projects I've created.\r\n              </p>\r\n              <div\r\n                className=\"ui three column grid blackBC\"\r\n                style={{ maxWidth: \"1480px\", margin: \"auto\" }}\r\n              >\r\n                <div className=\"column black\" style={{ maxWidth: \"100%\" }}>\r\n                  <div>\r\n                    A Sorting visualizer. It features merge sort, quick sort,\r\n                    heap sort and bubble sort.\r\n                    <p\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"50%\",\r\n                        width: \"100%\",\r\n                        fontSize: \"30px\",\r\n                        backgroundColor: \"black\",\r\n                      }}\r\n                    >\r\n                      Sorting Visualizer\r\n                    </p>\r\n                    <img src={pic1} style={{ maxWidth: \"100%\" }}></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"column black\" style={{ maxWidth: \"100%\" }}>\r\n                  <img src={pic1} style={{ maxWidth: \"100%\" }}></img>\r\n                </div>\r\n                <div className=\"column black\" style={{ maxWidth: \"100%\" }}>\r\n                  <img\r\n                    src=\"https://mined-gatech.github.io/EAB-AM-Project/img/316L_AM_IPF.png\"\r\n                    style={{ maxWidth: \"100%\" }}\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"ui three column grid blackBC\"\r\n                style={{ maxWidth: \"1480px\", margin: \"auto\" }}\r\n              >\r\n                <div className=\"column black\" style={{ maxWidth: \"100%\" }}>\r\n                  <div>\r\n                    A Sorting visualizer. It features merge sort, quick sort,\r\n                    heap sort and bubble sort.\r\n                    <p style={{ position: \"absolute\" }}>sss</p>\r\n                    <img\r\n                      src=\"https://media.geeksforgeeks.org/wp-content/uploads/20200619155542/sorting_quick_sort.png\"\r\n                      style={{ maxWidth: \"100%\" }}\r\n                    ></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"column black\" style={{ maxWidth: \"100%\" }}>\r\n                  <img\r\n                    src=\"https://mined-gatech.github.io/EAB-AM-Project/img/316L_AM_IPF.png\"\r\n                    style={{ maxWidth: \"100%\" }}\r\n                  ></img>\r\n                </div>\r\n                <div className=\"column black\" style={{ maxWidth: \"100%\" }}>\r\n                  <img\r\n                    src=\"https://mined-gatech.github.io/EAB-AM-Project/img/316L_AM_IPF.png\"\r\n                    style={{ maxWidth: \"100%\" }}\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n\r\n              */\r\n\r\n/*\r\n\r\n              if (\r\n                this.homeChecker() === \"home\" ||\r\n                this.homeChecker() === \"/\" ||\r\n                this.homeChecker() === \"Home\" ||\r\n                this.homeChecker() === \"XavierPurcell\" ||\r\n                this.homeChecker() === \"Xavier Purcell\"\r\n              ) {\r\n                document.title = \"Xavier Purcell\";\r\n              } else {\r\n                //console.log(this.homeChecker());\r\n              }\r\n              */\r\n/*\r\n\r\nhomeChecker() {\r\n    // make page active whnen we go directly to there this was a quick fix need work\r\n    let location = window.location.href;\r\n    let counter = -1;\r\n    let counterArray = [];\r\n    for (let i = 0; i < location.length; i++) {\r\n      if (location[i] === \"/\") {\r\n        counter++;\r\n        counterArray.push([i]);\r\n      }\r\n    }\r\n\r\n    let startPoint = counterArray[counter];\r\n\r\n    let locationString = \"\";\r\n    let falsey = false;\r\n    for (let i = startPoint; i < location.length; i++) {\r\n      if (falsey === true) {\r\n        locationString = locationString.concat(location[i]);\r\n      } else {\r\n        falsey = true;\r\n      }\r\n    }\r\n\r\n    if (locationString === \"\" || locationString === \"/\") {\r\n      locationString = \"home\";\r\n    }\r\n\r\n    let tempLocationString = locationString;\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n      if (location[i] !== \"#\") {\r\n        locationString = \"Home\";\r\n      } else if (location[i] === \"#\") {\r\n        locationString = tempLocationString;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return locationString;\r\n  }\r\n\r\n  */\r\n\r\n/*\r\n  <NavBar\r\n            activeItem1={activeItem}\r\n            handleItemClickPass={this.handleItemClick}\r\n            handleItemClickNormalPass={this.handleItemClickNormal}\r\n          />\r\n\r\n\r\n  */\r\n\r\n/*\r\n\r\n // make page active whnen we go directly to there this was a quick fix need work\r\n    let location = window.location.href;\r\n    let counter = -1;\r\n    let counterArray = [];\r\n    for (let i = 0; i < location.length; i++) {\r\n      if (location[i] === \"/\") {\r\n        counter++;\r\n        counterArray.push([i]);\r\n      }\r\n    }\r\n\r\n    let startPoint = counterArray[counter];\r\n\r\n    let locationString = \"\";\r\n    let falsey = false;\r\n    for (let i = startPoint; i < location.length; i++) {\r\n      if (falsey === true) {\r\n        locationString = locationString.concat(location[i]);\r\n      } else {\r\n        falsey = true;\r\n      }\r\n    }\r\n\r\n    if (locationString === \"\" || locationString === \"/\") {\r\n      locationString = \"home\";\r\n    }\r\n\r\n    let tempLocationString = locationString;\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n      if (location[i] !== \"#\") {\r\n        locationString = \"Home\";\r\n      } else if (location[i] === \"#\") {\r\n        locationString = tempLocationString;\r\n        break;\r\n      }\r\n    }\r\n    //console.log(locationString);\r\n    // end of quick fix\r\n\r\n    this.state = {\r\n      activeItem: locationString,\r\n    };\r\n\r\n          */\r\n\r\n/* const {active} = this.state; */\r\n\r\n/*\r\n\r\n\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    let result = name.split(\" \").join(\"\");\r\n\r\n    //console.log(result);\r\n    this.setState({ activeItem: result });\r\n  };\r\n\r\n  handleItemClickNormal = (e, { name }) => {\r\n    let result = name.split(\" \").join(\"\");\r\n    //result = \"\" + result;\r\n    //console.log(result);\r\n    this.setState({ activeItem: result });\r\n  };\r\n\r\n  */\r\n","import React from 'react';\nimport Home from './Home';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}